version: '3'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-proxy
    restart: always
#    labels:
#      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: 'true'
    ports:
      - 80:80
#      - 443:443
    volumes:
      - nginx-certs:/etc/nginx/certs:ro
      - nginx-conf.d:/etc/nginx/conf.d
      - nginx-vhost.d:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - backend

#  letsencrypt:
#    image: jrcs/letsencrypt-nginx-proxy-companion
#    container_name: letsencrypt
#    volumes:
#      - nginx-vhost.d:/etc/nginx/vhost.d
#      - nginx-certs:/etc/nginx/certs:rw
#      - nginx-html:/usr/share/nginx/html
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    depends_on:
#      - nginx-proxy
#    networks:
#      - backend

  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    restart: always
    environment: 
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JDBC_PARAMS: "ssl=false"
      KEYCLOAK_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KEYCLOAK_HTTP_PORT: ${KEYCLOAK_HTTP_PORT}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      VIRTUAL_HOST: ${KEYCLOAK_HOSTNAME}
      VIRTUAL_PORT: 8080
      PROXY_ADDRESS_FORWARDING: "true"
      LETSENCRYPT_HOST: ${LETSENCRYPT_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    depends_on:
      - postgres
    networks:
      - backend

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend  
   
networks:
  backend:

volumes:
  postgres-data:
  nginx-certs:
  nginx-conf.d:
  nginx-vhost.d:
  nginx-html:
  
